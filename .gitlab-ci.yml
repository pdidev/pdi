#=============================================================================
# Copyright (C) 2019-2024 Commissariat a l'energie atomique et aux energies alternatives (CEA)
# Copyright (C) 2019-2020 Institute of Bioorganic Chemistry Polish Academy of Science (PSNC)
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the names of CEA, nor the names of the contributors may be used to
#   endorse or promote products derived from this software without specific
#   prior written  permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#=============================================================================



.build_and_run_all_tests:
  only: &default_run [ master, '/^[0-9]*\.[0-9]*\.[0-9]*$/', merge_requests ]
  script: |
    JOBID="$(echo "${CI_JOB_NAME}"|md5sum|cut -b 1)"
    if [[ "01234567" == *"${JOBID}"* ]]; then export PDI_PLUGIN_PATH=/tmp/pdi_plugins; fi
    export DOCKER_RUNNER=gitlab
    export MAKEFLAGS='-j 4'
    export CTEST_FLAGS="--output-junit ${PWD}/tests.xml"
    if [ -d /tmpfs ]
    then
      export TMPDIR=/tmpfs
      export TEST_DIR="$(mktemp -p /tmpfs -d pdibuild.XXXXX)"
    fi
    ./bin/build_and_run_all_tests
  artifacts:
    when: always
    reports: { junit: ./tests.xml }


spack:
  extends: .build_and_run_all_tests
  parallel:
    matrix:
    - version:  ['latest', 'oldest']
      compiler: ['gcc', 'clang']
      mpi:      ['openmpi', 'mpich']
      level:    ['mini', 'all']
  image: ghcr.io/pdidev/spack/${version}/${compiler}/${mpi}/${level}:v3


debuntu:
  extends: .build_and_run_all_tests
  parallel:
    matrix:
    - base: ['ubuntu/focal', 'ubuntu/rolling', 'debian/oldstable', 'debian/unstable']
      mpi: ['openmpi', 'mpich']
      variant: ['mini', 'all']
  image: ghcr.io/pdidev/${base}/${mpi}/${variant}:v3



indentation:
  only: *default_run
  image:
    name: ghcr.io/pdidev/run-clang-format:v3
    entrypoint: ['/bin/sh', '-c']
  script: 'run-clang-format --color=always -r .'



pages:
  only: *default_run
  image: ghcr.io/pdidev/spack/latest/gcc/openmpi/all:v3
  variables: { GIT_SUBMODULE_STRATEGY: recursive }
  script: |
    cmake -DBUILD_DOCUMENTATION=ON -DBUILD_BENCHMARKING=OFF -DBUILD_TESTING=OFF pdi
    if make doc 2>&1 | tee >(cat>&2) | grep ' warning: ' > /dev/null
    then
      make doc 2>&1 | tee >(cat>&2) | grep ' warning: '
      exit 1
    fi
    mv docs/html "$CI_PROJECT_DIR/public"
  artifacts: { paths: [ public ] }


pages-deploy:
  only: [ master, '/^[0-9]*\.[0-9]*\.[0-9]*$/' ]
  stage: deploy
  image: curlimages/curl
  script: |
    curl -s -u "jbigot:${GITHUB_SITE_DEPLOY_KEY}" -H 'Accept: application/vnd.github.v3+json' -X POST "https://api.github.com/repos/pdidev/pdidev.github.io/dispatches" -d '{ "event_type": "do_gitlab_deploy" }'
