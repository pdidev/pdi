#=============================================================================
# Copyright (C) 2024-2025 Commissariat a l'energie atomique et aux energies alternatives (CEA)
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the names of CEA, nor the names of the contributors may be used to
#   endorse or promote products derived from this software without specific
#   prior written  permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#=============================================================================

name: Test PDI
description: 'Test PDI'
inputs:
  image:
    required: true
    description: "docker image in which to run the test"
runs:
  using: "composite"
  steps:
    - id: test
      shell: bash
      run: |
        cat<<-'EOF' > run.sh
          set -xe
          JOBID="$(echo "${{github.run_id}}"|md5sum|cut -b 1)"
          if [[ "01234567" == *"${JOBID}"* ]]; then export PDI_PLUGIN_PATH=/tmp/pdi_plugins; fi
          export MAKEFLAGS='-j 4'
          export CTEST_FLAGS="--output-junit /tmp/tests.xml"
          export TEST_DIR="/tmp_dir_test"
          /src/bin/build_and_run_all_tests
        EOF
        docker run \
          --cidfile='docker.cid' \
          -v ${PWD}:/src:ro \
          --tmpfs /tmp_dir_test:exec \
          ${{inputs.image}} \
          bash /src/run.sh
        if docker cp "$(cat docker.cid)":/tmp/tests.xml tests.xml
        then echo "with_report=true" >> "$GITHUB_OUTPUT"
        else echo "with_report=false" >> "$GITHUB_OUTPUT"
        fi
    - id: Publish
      uses: mikepenz/action-junit-report@v4
      if: always() && steps.test.outputs.with_report == 'true' # always run even if the previous step fails
      with: { report_paths: 'tests.xml' }
