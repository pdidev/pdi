#!/bin/bash
#=============================================================================
# Copyright (c) 2024-2025 Centre national de la recherche scientifique (CNRS)
# Copyright (c) 2024-2025 Commissariat a l'énergie atomique et aux énergies alternatives (CEA)
# Copyright (c) 2024-2025 Institut national de recherche en informatique et en automatique (Inria)
# Copyright (c) 2024-2025 Université Paris-Saclay
# Copyright (c) 2024-2025 Université de Versailles Saint-Quentin-en-Yvelines
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the names of CEA, nor the names of the contributors may be used to
#   endorse or promote products derived from this software without specific
#   prior written  permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#=============================================================================

cd "$(dirname "$(dirname "$0")")"

if [ 0 -eq $# ]
then CLANG_FORMAT_ARGS=""
elif [ "x--apply" = "x$1" ]
then CLANG_FORMAT_ARGS="-i"
elif [ "x--quiet" = "x$1" ]
then CLANG_FORMAT_ARGS="-q"
else
	echo "Usage: $0 [--apply|--quiet]" >&2
	echo "  Checks (or with --apply, enforce) the indentation of PDI files" >&2
	echo "  With --quiet, only the return code gives info" >&2
	exit 1
fi

RUN_CLANG_FORMAT='false'

# Look for a docker based version
DOCKER="$(which docker)"
if "${DOCKER}" --version >/dev/null 2>&1
then
	RUN_CLANG_FORMAT="${DOCKER} run --rm -v $(pwd):/src ghcr.io/pdidev/run_clang_format:v3"
fi

# Look for a local version
if [ -f vendor/run-clang-format/run-clang-format.py ]
then
	for CLANG_FORMAT in clang-format-17 clang-format17 clang-format
	do
		CLANG_FORMAT="$(which "${CLANG_FORMAT}")"
		if which "${CLANG_FORMAT}" >/dev/null && [ 17 -le "$("${CLANG_FORMAT}" --version | sed 's/.*version\s\+\([0-9]\+\)\..*/\1/')" 2>/dev/null ]
		then
			RUN_CLANG_FORMAT="python3 vendor/run-clang-format/run-clang-format.py --clang-format-executable ${CLANG_FORMAT}"
			break
		fi
	done
fi

if [ "${RUN_CLANG_FORMAT}" = false ]
then
	echo "clang-format version 17 not found and docker not usable"
	exit 127
fi

git ls-files -z --full-name | grep -zZv '^vendor/' | grep -zZ '\.[hHcC]\(\|++\|xx\|pp\)\s*$' | xargs -0 ${RUN_CLANG_FORMAT} ${CLANG_FORMAT_ARGS}
