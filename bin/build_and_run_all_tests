#!/bin/bash
#=============================================================================
# Copyright (C) 2022-2025 Commissariat a l'energie atomique et aux energies alternatives (CEA)
# Copyright (C) 2020 Institute of Bioorganic Chemistry Polish Academy of Science (PSNC)
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# * Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the names of CEA, nor the names of the contributors may be used to
#   endorse or promote products derived from this software without specific
#   prior written  permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#=============================================================================

set -xe



# Make our work dirs

SRCDIR="${PWD}"

TEST_DIR_WITH_PDI="${TEST_DIR_WITH_PDI:-${PWD}}"
cd "${TEST_DIR_WITH_PDI}"
cd "$(mktemp -d pdibuild.XXXXX)"
TEST_DIR_ROOT="${PWD}"

mkdir no_pdi
cd no_pdi
TEST_DIR_NO_PDI="${PWD}"

cd "${TEST_DIR_ROOT}"
mkdir with_pdi
cd with_pdi
TEST_DIR_WITH_PDI="${PWD}"

cd "${TEST_DIR_ROOT}"
mkdir api_pdi
cd api_pdi
TEST_DIR_API="${PWD}"

cd "${SRCDIR}"
cd "$(dirname "$0")/.."
SRCDIR="${PWD}"




# Gather options

MAKEFLAGS="${MAKEFLAGS:--j}"
EXCLUDED_PDI_TESTS=""

if [[ -n "${PDI_PLUGIN_PATH}" ]]
then
	CMAKE_FLAGS="${CMAKE_FLAGS} -DINSTALL_PDIPLUGINDIR=${PDI_PLUGIN_PATH}"
fi

if [[ "x${PDI_LIBS}" = "xprovided" ]]
then
	CMAKE_FLAGS="${CMAKE_FLAGS} -DUSE_DEFAULT=SYSTEM"
else
	CMAKE_FLAGS="${CMAKE_FLAGS} -DUSE_DEFAULT=EMBEDDED"
fi



# Various workarounds

NC_VERSION_MAJOR="$(nc-config --version | sed 's/^[a-zA-Z ]*\([0-9]*\)\.\([0-9]*\).*$/\1/')"
NC_VERSION_MINOR="$(nc-config --version | sed 's/^[a-zA-Z ]*\([0-9]*\)\.\([0-9]*\).*$/\2/')"
if (( NC_VERSION_MAJOR > 4 || ( NC_VERSION_MAJOR == 4 && NC_VERSION_MINOR > 8 ) )) || [[ "x${PDI_LIBS}" != "xprovided" ]]
then
	#TODO: NetCDF error https://gitlab.maisondelasimulation.fr/pdidev/pdi/-/issues/433
	EXCLUDED_PDI_TESTS="${EXCLUDED_PDI_TESTS:+$EXCLUDED_PDI_TESTS|}test_05_C"
fi

if [[ "x${PDI_SYSTEM}" =~ ^x(ubuntu|debian) && "x${PDI_MPI}" = "xmpich" ]]
then
	#Workaround: mpi4py in debuntu is packaged for openmpi only
	EXCLUDED_PDI_TESTS="${EXCLUDED_PDI_TESTS:+$EXCLUDED_PDI_TESTS|}PDI_example_trace_P|PDI_example_decl_hdf5_P"
fi

if [[ "x${PDI_SYSTEM}" =~ ^xubuntu && "x${PDI_MPI}" = "xmpich" ]] && dpkg -s mpich | grep -q 4.2.0-5
then
	#Workaround: mpich is broken in ubuntu noble and launches independent processes
	#Due to https://bugs.launchpad.net/ubuntu/+source/mpich/+bug/2072338
	EXCLUDED_PDI_TESTS="${EXCLUDED_PDI_TESTS:+$EXCLUDED_PDI_TESTS|}mpi|decl_hdf5_02_F|decl_hdf5_03_F|decl_hdf5_04_F|PDI_example"
fi

if [[ "x${PDI_SYSTEM}" =~ ^x(ubuntu|debian) && "x${PDI_LIBS}" = "xprovided" ]]
then
	#Workaround: parallel NetCDF detection broken in debuntu (and absent in mpich case)
	CMAKE_FLAGS="${CMAKE_FLAGS} -DBUILD_NETCDF_PARALLEL=OFF"
fi

if [[ "x${PDI_SYSTEM}" =~ ^xmacos ]]
then
	#Workaround: not all plugins work on OSX yet (https://github.com/pdidev/pdi/issues/580)
	CMAKE_FLAGS="${CMAKE_FLAGS} \
-DBUILD_BENCHMARKING=OFF \
-DBUILD_DECL_HDF5_PLUGIN=ON \
-DBUILD_DECL_NETCDF_PLUGIN=OFF \
-DBUILD_DEISA_PLUGIN=OFF \
-DBUILD_DOCUMENTATION=OFF \
-DBUILD_HDF5_PARALLEL=ON \
-DBUILD_FORTRAN=OFF \
-DBUILD_PYTHON=OFF \
-DBUILD_MPI_PLUGIN=ON \
-DBUILD_NETCDF_PARALLEL=ON \
-DBUILD_PYCALL_PLUGIN=OFF \
-DBUILD_SERIALIZE_PLUGIN=ON \
-DBUILD_SET_VALUE_PLUGIN=ON \
-DBUILD_TESTING=ON \
-DBUILD_TRACE_PLUGIN=ON \
-DBUILD_USER_CODE_PLUGIN=ON"
fi



# Configure, build & test for pdi, with Paraconf

cd "${TEST_DIR_WITH_PDI}"
cmake -DBUILD_BENCHMARKING=OFF -DDIST_PROFILE=Devel ${CMAKE_FLAGS} "${SRCDIR}"
make ${MAKEFLAGS}
ctest --output-on-failure --timeout 90 ${CTEST_FLAGS} ${EXCLUDED_PDI_TESTS:+-E $EXCLUDED_PDI_TESTS}

echo "############ tests pdi/paraconf done"

if ldconfig -p | grep -q libparaconf; then
	# Configure, build & test for no-pdi's specific tests with CMAKE_PREFIX_PATH (find_package), with Paraconf

	cd "${TEST_DIR_NO_PDI}"
	RELATIVE_NO_PDI_PATH="no-pdi"
	cmake -DBUILD_FORTRAN=OFF -DBUILD_DECL_HDF5_PLUGIN=OFF -DBUILD_DECL_NETCDF_PLUGIN=OFF -DCMAKE_PREFIX_PATH="${CMAKE_PREFIX_PATH:+${CMAKE_PREFIX_PATH}:}${SRCDIR}/${RELATIVE_NO_PDI_PATH}" "${SRCDIR}/example"
	make ${MAKEFLAGS}
	ls
	ldd PDI_example_trace_C
	ctest --output-on-failure --timeout 90 ${CTEST_FLAGS} -R PDI_example_trace_C

	echo "############ example no-pdi/paraconf done"

	cd "${TEST_DIR_API}"
	RELATIVE_NO_PDI_PATH="no-pdi"
	NO_PDI_TESTS="test_api_C test_api_CXX"
	cmake -DBUILD_DECL_HDF5_PLUGIN=OFF -DBUILD_DECL_NETCDF_PLUGIN=OFF -DCMAKE_PREFIX_PATH="${CMAKE_PREFIX_PATH:+${CMAKE_PREFIX_PATH}:}${SRCDIR}/${RELATIVE_NO_PDI_PATH}" "${SRCDIR}/tests"
	make ${MAKEFLAGS}
	ldd test_api_C
	ctest --output-on-failure --timeout 90 ${CTEST_FLAGS} -R ${NO_PDI_TESTS}
	rm -rf CMakeCache.txt CMakeFiles/ cmake_install.cmake Makefile

	echo "############ test-api no-pdi/paraconf done"
else
	echo "############ no-pdi/paraconf skipped, paraconf not available on the CI's mini configuration"
fi

# Configure, build & test for no-pdi's specific tests with CMAKE_PREFIX_PATH (find_package), without Paraconf

cd "${TEST_DIR_API}"
RELATIVE_NO_PDI_PATH="no-pdi"
NO_PDI_TESTS="test_api_C test_api_CXX"
cmake -DBUILD_DECL_HDF5_PLUGIN=OFF -DBUILD_DECL_NETCDF_PLUGIN=OFF -DCMAKE_PREFIX_PATH="${SRCDIR}/${RELATIVE_NO_PDI_PATH}" "${SRCDIR}/tests"
make ${MAKEFLAGS}
ldd test_api_C
ctest --output-on-failure --timeout 90 ${CTEST_FLAGS} -R ${NO_PDI_TESTS}

echo "############ test-api no-pdi/no-paraconf done"
